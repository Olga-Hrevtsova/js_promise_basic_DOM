{"mappings":"ACGA,SAAS,EAAY,CAAI,EAAE,IAAA,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,EAAA,SAAA,CAAA,EAAA,CACnB,EAAU,SAAS,aAAa,CAAC,OAEvC,EAAQ,SAAS,CAAC,GAAG,CAAC,WAElB,GACF,EAAQ,SAAS,CAAC,GAAG,CAAC,iBAExB,EAAQ,WAAW,CAAG,EACtB,SAAS,IAAI,CAAC,WAAW,CAAC,GAG1B,WAAW,WACT,EAAQ,MAAM,EAChB,EAAG,IACL,CAGA,IAAM,EAAW,IAAI,QAAQ,SAAC,CAA9B,EACE,SAAS,aAAa,CAAC,SAAS,gBAAgB,CAAC,QAAS,WACxD,GACF,EACF,GAGM,EAAW,IAAI,QAAQ,SAAC,CAAA,CAAS,CAAvC,EACE,WAAW,WACT,EAAO,AAAI,MAAM,yBACnB,EAAG,IACL,GAGA,EAAS,IAAI,CAAC,WACZ,EAAY,wBACd,GAGA,EAAS,KAAK,CAAC,SAAC,CAAhB,EACE,EAAY,EAAM,OAAO,CAAE,CAAA,EAC7B","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\n// Функція для створення та відображення повідомлення\nfunction showMessage(text) {\n    var isError = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n    var message = document.createElement(\"div\");\n    message.classList.add(\"message\");\n    if (isError) message.classList.add(\"error-message\");\n    message.textContent = text;\n    document.body.appendChild(message);\n    // Видалення повідомлення через 2 секунди\n    setTimeout(function() {\n        message.remove();\n    }, 2000);\n}\n// Створюємо promise1: виконується при кліку на .logo\nvar promise1 = new Promise(function(resolve) {\n    document.querySelector(\".logo\").addEventListener(\"click\", function() {\n        resolve();\n    });\n});\n// Створюємо promise2: відхиляється через 3 секунди з передачею об'єкта Error\nvar promise2 = new Promise(function(resolve, reject) {\n    setTimeout(function() {\n        reject(new Error(\"Promise was rejected!\")); // Використовуємо Error\n    }, 3000);\n});\n// Обробник успішного виконання promise1\npromise1.then(function() {\n    showMessage(\"Promise was resolved!\");\n});\n// Обробник помилки для promise2\npromise2.catch(function(error) {\n    showMessage(error.message, true);\n});\n\n//# sourceMappingURL=index.cdcb3eba.js.map\n","'use strict';\n\n// Функція для створення та відображення повідомлення\nfunction showMessage(text, isError = false) {\n  const message = document.createElement('div');\n\n  message.classList.add('message');\n\n  if (isError) {\n    message.classList.add('error-message');\n  }\n  message.textContent = text;\n  document.body.appendChild(message);\n\n  // Видалення повідомлення через 2 секунди\n  setTimeout(() => {\n    message.remove();\n  }, 2000);\n}\n\n// Створюємо promise1: виконується при кліку на .logo\nconst promise1 = new Promise((resolve) => {\n  document.querySelector('.logo').addEventListener('click', () => {\n    resolve();\n  });\n});\n\n// Створюємо promise2: відхиляється через 3 секунди з передачею об'єкта Error\nconst promise2 = new Promise((resolve, reject) => {\n  setTimeout(() => {\n    reject(new Error('Promise was rejected!')); // Використовуємо Error\n  }, 3000);\n});\n\n// Обробник успішного виконання promise1\npromise1.then(() => {\n  showMessage('Promise was resolved!');\n});\n\n// Обробник помилки для promise2\npromise2.catch((error) => {\n  showMessage(error.message, true);\n});\n"],"names":["showMessage","text","isError","arguments","length","message","document","createElement","classList","add","textContent","body","appendChild","setTimeout","remove","promise1","Promise","resolve","querySelector","addEventListener","promise2","reject","Error","then","catch","error"],"version":3,"file":"index.cdcb3eba.js.map"}